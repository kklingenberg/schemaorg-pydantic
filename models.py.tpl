"""Pydantic models generated from the schema.org vocabulary version
{{ schemaorg_version }}. See https://schema.org for reference.

Generated by schemaorg-pydantic@{{ commit }}
at {{ timestamp }}

This file was created by a [Typer](https://github.com/tiangolo/typer)-enabled
python program which uses [Jinja2](https://jinja.palletsprojects.com/) templates
to generate the pydantic models file and format it through
[black](https://github.com/psf/black).

Typer version: {{ typer_version }}
Jinja2 version: {{ jinja2_version }}
black version: {{ black_version }}

"""
from datetime import date, datetime, time
from decimal import Decimal
from typing import Any, List, Literal, Optional, Union

from pydantic import AnyUrl, BaseModel, Field, StrictBool


class SchemaOrgBase(BaseModel):

    def dict(self, *args, **kwargs):
        defaults = {
            "exclude_none": True,
            "by_alias": True
        }
        return super().dict(*args, **dict(defaults, **kwargs))

    class Config:
        allow_population_by_field_name = True


{% for model in models %}
class {{ model.name }}(SchemaOrgBase):
    """{{ model.formatted_description }}

    See https://schema.org/{{ model.name }}.

    """

    {%- for field in model.fields %}
    {{ field.name }}: {{ field.type }} = Field(
        None,
        {% if field.alias != field.name %}alias="{{ field.alias }}",{% endif %}
        description={{ field.formatted_description }},
    )
    {%- endfor %}
    locals().update({"@type": Field("{{ model.type_marker }}", const="{{ model.type_marker }}")})

{% endfor %}


{%- for model in models %}
{{ model.name }}.update_forward_refs()
{%- endfor %}


class enum:
    "Inner namespace for schema.org enumerations."
    {% for enum in enums %}
    class {{ enum.name }}:

        {%- for member in enum.members %}
        {{ member }} = {{ enum.name }}(
            identifier="https://schema.org/{{ member }}",
            name="{{ member }}",
        )
        {%- else %}
        pass
        {%- endfor %}


    {% else %}
    pass
    {% endfor %}
